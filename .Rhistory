ggplot(data = cust_com,
aes(Month, Count)
aes(Month, Count)
barplot(cust_com, main="Monthly Complaint Trend", xlab = "Count",ylab = "Month",col = rainbow(3))
barplot(cust_com, main="Monthly Complaint Trend", xlab = "Count",ylab = Month,col = rainbow(3))
barplot(cust_com, main="Monthly Complaint Trend", xlab = "Count",ylab = Month,col = rainbow(2))
barplot(cust_com, main="Monthly Complaint Trend", xlab = "Count",ylab = 'Month',col = rainbow(2))
plot(cust_com,
col="yellow",
main="Density Plot for Annual Income",
xlab="Annual Income Class",
ylab="Density")
summary(cust_com$Month)
count.fields(cust_com)
cust_com$Month = sapply(cust_com$Month,factor)
typeof(cust_com$Month)
str(cust_com)
x= month()#1
summary(levels(cust_com$Month))
levels(cust_com$Month)
rm(cust_com)
rm(cust_com,dmy,mdy)
cust_com = Comcast_Telecom_Complaints_data
str(cust_com)
install.packages("lubridate")
library(lubridate)
mdy = mdy(cust_com$Date)
dmy = dmy(cust_com$Date)
mdy[is.na(mdy)] <- dmy[is.na(mdy)]
cust_com$Date = mdy
plot(cust_com$Date,"COUNT")
plot(cust_com$Date,"COUNT",xlab = "Date",ylab = "Count")
plot(x= cust_com$Date,y="COUNT",xlab = "Date",ylab = "Count")
?plot(x= cust_com$Date,y="COUNT",xlab = "Date",ylab = "Count")
# Visualizing Daily Compliant Trend
install.packages("plyr")
library(plyr)
mdy = mdy(cust_com$Date)
dmy = dmy(cust_com$Date)
mdy[is.na(mdy)] <- dmy[is.na(mdy)]
cust_com$Date = mdy
mdy = mdy(cust_com$Date)
dmy = dmy(cust_com$Date)
cust_com$Month <- as.Date(cut(cust_com$Date,
breaks = "month"))
str(cust_com)
cust_com$Month <- as.Date(cut(cust_com$Date,
breaks = "month"))
rm(cust_com)
rm(cust_com,dmy,mdy)
cust_com = Comcast_Telecom_Complaints_data
str(cust_com)
library(lubridate)
mdy = mdy(cust_com$Date)
dmy = dmy(cust_com$Date)
mdy[is.na(mdy)] <- dmy[is.na(mdy)]
cust_com$Date = mdy
str(cust_com)
cust_com$Month <- as.Date(cut(cust_com$Date,
breaks = "month"))
a=table(cust_com$Month)
barplot(a,main="Using BarPlot to Compare Monthly Complaint Trend",
ylab="Count",
xlab="Gender",
col=rainbow(2),
legend=rownames(a))
b= table(cust_com$Date)
ggplot(date=b)
ggplot(data=b)
hist(a, main = "Daily Complaint Trend",
ylab = "Count",
xlab = "Date",
col = rainbow(2),
labels=TRUE)
hist(b, main = "Daily Complaint Trend",
ylab = "Count",
xlab = "Date",
col = rainbow(2),
labels=TRUE)
hist(cust_com$Date, main = "Daily Complaint Trend",
ylab = "Count",
xlab = "Date",
col = rainbow(2),
labels=TRUE)
hist(cust_com$Date, main = "Daily Complaint Trend",
ylab = "Count",
xlab = cust_com$Date,
col = rainbow(2),
labels=TRUE)
hist(b, main = "Daily Complaint Trend",
ylab = "Count",
xlab = cust_com$Date,
col = rainbow(2),
labels=TRUE)
hist(b, main = "Daily Complaint Trend",
ylab = "Count",
xlab = "Date",
col = rainbow(2),
labels=TRUE)
b
#Daily Trend
#create date table
b= data.frame(cust_com$Date,stringsAsFactors = FALSE)
view(b)
View(b)
hist(b, main = "Daily Complaint Trend",
ylab = "Count",
xlab = "Date",
col = rainbow(2),
labels=TRUE)
ggplot(date=b)
ggplot(date=b,aes(x=Date,y=count(Date)))
barplot(b$cust_com.Date,main = "Daily Trend")
barplot(b$cust_com.Date,main = "Daily Trend",
ylab = "Count",
xlab = "Date",
col = rainbow(2))
barplot(a,main="Using BarPlot to Compare Monthly Complaint Trend",
ylab=count(b$cust_com.Date),
xlab="Gender",
col=rainbow(2),
legend=rownames(a))
barplot(b$cust_com.Date,main = "Daily Trend",
ylab = "Count",
xlab = "Date",
col = rainbow(2))
barplot(b$cust_com.Date,main = "Daily Trend",
ylab = count(b$cust_com.Date),
xlab = "Date",
col = rainbow(2))
barplot(a,main="Using BarPlot to Compare Monthly Complaint Trend",
ylab="Count",
xlab="Gender",
col=rainbow(2),
legend=rownames(a))
barplot(a,main="Using BarPlot to Compare Monthly Complaint Trend",
ylab="Count",
xlab="Gender",
col=rainbow(2))
View(cust_com)
View(cust_com)
row.names(1)
row.names(a)
a=row.names("April","May","June")
levels(a)
a
View(a)
b= table(cust_com$Date)
View(b)
plot(b)
plot(a)
plot(a,col=rainbow(2))
legend(labels=row.names())
legend(labels=row.names(a))
plot(a,col=rainbow(2),labels=row.names(a))
plot(a,col=rainbow(2))
#State with the Maximum Complaints
max_comp = table(cust_com$State)
max_comp
max(max_comp)
colnames(max(max_comp))
rownames(max(max_comp))
row.names(max(max_comp))
row.names(max_comp)
max_comp
View((row.names()))
View(max_comp)
max(max_comp)
View(cust_com)
View(cust_com)
typeof(cust_com$Status)
c=table(cust_com$State,cust_com$Status)
View(cust_com)
View(c)
c=df(cust_com$State,cust_com$Status)
c=data.frame(cust_com$State,cust_com$Status)
View(c)
View(c)
c$cust_com.Status = if(c$cust_com.Status=="Open" || "Pending"){
print("Open")
}else{print("Closed")}
typeof(c$cust_com.Status)
c=sapply(c$cust_computer.Status, str)
typeof(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status)
View(c)
typeof(c$cust_com.Status)
View(c)
View(c)
str(c)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
View(c)
typeof(c$cust_com.Status)
str(c)
c$cust_com.Status = if(c$cust_com.Status=="Open" || "Pending"){
print("Open")
}else{print("Closed")}
c$cust_com.Status = if(c$cust_com.Status=="Open || Pending"){
print("Open")
}else{print("Closed")}
y
c$cust_com.Status = if(c$cust_com.Status=="Open"){
print("Open")
}if(c$cust_com.Status=="Pending")else{print("Closed")}
c$cust_com.Status = if(c$cust_com.Status=="Open"){
c$cust_com.Status="Open"
}if(c$cust_com.Status=="Pending"){
c$cust_com.Status="Open"
}else{print("Closed")}
View(c)
levels(c)
levels(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = T)
typeof(c$cust_com.Status)
str(c)
c$cust_com.Status = if(c$cust_com.Status=="Open"){
c$cust_com.Status="Open"
}if(c$cust_com.Status=="Pending"){
c$cust_com.Status="Open"
}else{print("Closed")}
levels(c$cust_com.Status)
levels(c$cust_com.Status)
c$cust_com.Status = if(c$cust_com.Status=="Open"){
c$cust_com.Status="Open"
}if(c$cust_com.Status=="Pending"){
c$cust_com.Status="Open"
}else{print("Closed")}
c$cust_com.Status = if(c$cust_com.Status=="Open"){
c$cust_com.Status="Open"
}if(c$cust_com.Status=="Pending"){
c$cust_com.Status="Open"
}else{print("Closed")}
c$cust_com.Status = if(c$cust_com.Status=="Open"){
c$cust_com.Status="Open"
}if(c$cust_com.Status=="Pending"){
c$cust_com.Status="Open"
}else{cust_com.Status="Closed"}
}else{replace(i,"Closed"}
levels(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = T)
levels(c$cust_com.Status)
c$cust_com.Status = if(c$cust_com.Status=="Open"){
c$cust_com.Status="Open"
}if(c$cust_com.Status=="Pending"){
c$cust_com.Status="Open"
}else{c$cust_com.Status="Closed"}
for (col in c$cust_com.Status) {
}
View(c)
View(c)
typeof(c$cust_com.Status)
c$cust_com.Status[c$cust_com.State == "Pending"] = "Open"
c$cust_com.Status[c$cust_com.Status== "Solved"] = "Closed"
levels(c$cust_com.Status)
View(c)
typeof(c)
str(c)
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
View(c)
str(c)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = T)
View(c)
str(c)
c$cust_com.Status[c$cust_com.State == "Pending"] = "Open"
c$cust_com.Status[c$cust_com.Status== "Solved"] = "Closed"
str(c)
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
c$cust_com.Status[c$cust_com.State =="Pending"] = "Open"
c$cust_com.Status[c$cust_com.Status=="Solved"] = "Closed"
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
typeof(cust_com)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = T)
typeof(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
View(c)
typeof(c$cust_com.Status)
str(c)
c$cust_com.Status[c$cust_com.State =="Pending"] = "Open"
c$cust_com.Status[c$cust_com.Status=="Solved"] = "Closed"
str(c)
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
View(c)
View(c)
c$cust_com.Status[c$cust_com.State =="Pending"] = "Open"
c$cust_com.Status[c$cust_com.State =="Pending"] = "Open"
c$cust_com.Status[c$cust_com.Status=="Solved"] = "Closed"
str(c)
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
c$cust_com.Status[c$cust_com.State =="Pending"] <- "Open"
c$cust_com.Status[c$cust_com.Status=="Solved"] <- "Closed"
str(c)
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
c$cust_com.Status[c$cust_com.State %in% c("Open","Pending")] <- "Open"
c$cust_com.Status[c$cust_com.Status %in% c("Closed","Pending")] <- "Closed"
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
c$cust_com.Status[c$cust_com.State %in% c("Open","Pending")] <- "Open"
c$cust_com.Status[c$cust_com.Status %in% c("Closed","Solved")] <- "Closed"
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
c$cust_com.Status[c$cust_com.State == "Pending"]="Open"
levels(c$cust_com.Status)
typeof(cust_com$Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
View(c)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
# Changing Levels to "Open" and "Closed" in Status
c$cust_com.Status[c$cust_com.State %in% c("Open","Pending")] <- "Open"
c$cust_com.Status[c$cust_com.Status %in% c("Closed","Solved")] <- "Closed"
c$cust_com.Status[c$cust_com.State == "Pending"]="Open"
str(c)
#Now we convert the Data Frame c$Status into a categorical Variable
c$cust_com.Status = sapply(c$cust_com.Status,factor)
levels(c$cust_com.Status)
cust_com$Status[cust_com$Status %in% c("Open","Pending")] <- "Open"
cust_com$Status[cust_com$Status %in% c("Closed","Solved")] <- "Closed"
levels(cust_com$Status)
cust_com$Status= sapply(cust_com$Status,factor)
levels(cust_com$Status)
summary(cust_com$Status)
str(cust_com)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = T)
View(c)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
summary(c)
plot(c$cust_com.State~c$cust_com.Status)
plot(cust_com.Status~c$cust_com.State~c)
plotc$(cust_com.Status~c$cust_com.State~c)
plot(c$cust_com.Status~c$cust_com.State~c)
barplot(c$cust_com.Status~c$cust_com.State~c,)
hist(c,xlab = States,ylab = Status)
barplot(c)
plot(c)
plot(c,col=rainbow(2))
barplot(c, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = f)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
c$cust_com.Status = as.character(c$cust_com.Status)
str(c)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
str(c)
c$cust_com.Status[c$cust_com.Status == "Open"] = 1
c$cust_com.Status[c$cust_com.Status == "Closed"] = 0
c$cust_com.Status = as.character(c$cust_com.Status)
str(c)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
View(c)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
c$cust_com.Status = as.character(c$cust_com.Status)
str(c)
c$cust_com.Status[c$cust_com.Status == "Open"] = 1
c$cust_com.Status[c$cust_com.Status == "Closed"] = 0
str(c)
c$cust_com.Status=as.integer(c$cust_com.Status)
str(c)
barplot(c, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
plot(c,col=rainbow(2))
barplot(c, main = "total revenue", xlab = "month", ylab = "revenue", col = colors)
barplot(c)
?barplot(c)
plot(c,col=rainbow(2))
summary(c)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
View(c)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
c$cust_com.Status = as.character(c$cust_com.Status)
c$cust_com.Status[c$cust_com.Status == "Open"] = 1
c$cust_com.Status[c$cust_com.Status == "Closed"] = 0
summary(c)
str(c)
plot(c,col=rainbow(2))
barplot(c)
c=matrix(cust_com$State,cust_com$Status, stringsAsFactors = F)
c=matrix(cust_com$State,cust_com$Status)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
View(c)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
summary(c)
str(c)
max(c)
summary(c)
plot(c,col=rainbow(2))
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = F)
View(c)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
c=data.frame(cust_com$State,cust_com$Status, stringsAsFactors = T)
typeof(c$cust_com.Status)
levels(c$cust_com.Status)
str(c)
max(c)
?max(c)
summary(c)
plot(c,col=rainbow(2))
plot(c,col=rainbow(2),width=5)
plot(c,col=rainbow(2),width=10)
rect(c,col=rainbow(2),width=10)
barplot(c,col=rainbow(2),width=10)
barplot(10,c,col=rainbow(2))
plot(c$cust_com.State~c$cust_com.Status,col=rainbow(2))
plot(c$cust_com.Status~c$cust_com.State,col=rainbow(2))
x = c("1","5","98","23")
x=as.numeric(x)
typeof(x)
x = c("1","5","98","23")
typeof(x)
x=as.numeric(x)
x = c("1","5","98","23")
typeof(x)
x=as.num(x)
x = list(78,"Tim",101,8i)
length(x)
as.character(factor(c("No", "yes", "no", "yes", "no")))
x=as.character(factor(c("No", "yes", "no", "yes", "no")))
typeof(x)
sum(2,8,9,NA)
c(T,F,TRUE,1)
EmpRecs = data.frame(EmpID = c(101,102,103) , Name = c("John","Theresa","Andy","Paul"))
EmpRecs = data.frame(EmpID = c(101,102,103)
Name = c("John","Theresa","Andy","Paul"))
EmpRecs = data.frame(EmpID = c(101,102,103),Name = c("John","Theresa","Andy","Paul"))
EmpRecs = data.frame(EmpID = c(101,102,103) , Name = c("John","Theresa","Andy","Paul"))
EmpRecs = data.frame(EmpID = c(101,102,103,104) , Name = c("John","Theresa","Andy","Paul"))
x= c(98,2,67,87)
x=as.factor(x)
sum(2,8,9,NA,na.rm=T)
for(i in 1:100){ if(i >20){ break } print(i) }
for(i in 1:100){ if(i >20){ break } print(i) }
i=1
for(i in 1:100){ if(i >20){ break } print(i) }
for(i in seq(from=1,to=10,by=2)) { Variable1=print(i) }
x <-1 switch(x, 2+2, sum(1:10), max(1:10))
x <-1
switch(x, 2+2, sum(1:10), max(1:10))
x =c(51,93,8,67,22) x[x>50 & x<90]
x =c(51,93,8,67,22)
x[x>50 & x<90]
describe.by(iris,group=iris$Species)
?describe.by(iris,group=iris$Species)
?describe.by(iris,group=iris$Species)
CustomerID = c(1098,1099)ProductOrdered = c('Fan','Washing Machine')
CustomerID = c
ProductOrdered = c('Fan','Washing Machine')
data.frame(CustomerID,ProductOrdered)
x=data.frame(CustomerID,ProductOrdered)
x
CustomerID = c(1098,1099)
ProductOrdered = c('Fan','Washing Machine')
x=data.frame(CustomerID,ProductOrdered)
x
y= rbind(CustomerID,ProductOrdered)
y
x=as.matrix(x)
x
typeof(x)
View(x)
View(x)
CustomerID = c(1098,1099)
ProductOrdered = c('Fan','Washing Machine')
x=data.frame(CustomerID,ProductOrdered)
typeof(x)
x=as.matrix(x)
x=as.matrix(x)
x
typeof(x$CustomerID)
typeof(x[1,1])
apply(iris[,1:4],2,mean)
git
